HI 各位；
明天（1月14日）早上11-12点召开项目会议，地点5楼会议室，请各位准时出度；
会议主要内容：
总结前几个版本，我们做的好的地方及有待改进的地方；
目的：更好的发挥团队合作能力；

请各位会前准备下；每个人都需要围绕这个话题，提出自己的看法和意见；谢谢！


讨论内容具体有以下几点：
1、觉得做的好的地方（do more），以后其他项目也可以借鉴和推广的点
2、觉得尽量少做的点（do less），以后要尽量减少类似或者重复性的工作
3、觉得应该避免的点（don't do），以后要尽量避免犯同样的错误
可以从［工作流程］、［技术架构］、［沟通协作］、［人员配置］等几个方面展开；

假设让大家重新再做一次3.0-3.2这个项目，应该怎么做才能做得更好。给我的建议是什么？给公司的建议是什么？


1、【工作流程】
任务->功能解析->接口方法定义(详细文档说明)->功能开发->接口联调->功能测试->任务完成
（尽可能减少口述）
接口方法的定义，其中包含了前台方法（参数）定义、后台方法（参数定义）、返回数据格式定义
前后台的开发严格按照文档说明进行（彼此之间将任务的责任分清）
功能开发中包含了：美术<->静态页面 <->前台 <->后台
                    <——————————————————|          

尽量少做的点：方法乱写，体现为方法不按某一类型存放，最终代码难以维护。在功能开发的过程中，往往开发需要等待美术设计完成-静态页面实现完成后，才可以进行，在这过程中比较耗时；
应避免的点：功能完成后必须自行测试通过方可提交代码，不应该提供未经过自己测试的代码（会造成系统功能异常，有时候对系统的影响较大）

2、【技术架构】
A：整体的项目架构上，采用多前台+多后台（数据来源、逻辑处理），可将前后台工作进行分离，提高功能的开发效率
B：项目的前端开发中，均采用功能模块化进行开发、减少代码偶合、地图相关功能则采用密封式开发
以AB为前提，系统则可实现后台无限重用、前台代码模块化替换（便于版本的迭代、多版本的开发）
对于前端开发人员，必须要了解浏览器的页面渲染机制，才能不断地提高系统的性能。

3、【沟通协作】
大的方案须与整个团队进行讨论决定、任务开发上应尽量减少口头上的任务沟通（文档为主），探讨方案、技术实现等则应多沟通交流。
尽量少做的点：任务的反复沟通（非常影响效率以及最后的质量）
避免的点：沟通出现错误（双方对同一问题的理解不一致，在沟通过程中，遇到不清楚，带疑惑的情况一定要及时提出）

如果再做一次3.0-3.2的版本；
1、前台的功能开发须要按模块进行开发；
